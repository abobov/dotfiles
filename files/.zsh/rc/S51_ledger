# Ledger

alias ledger='noglob ledger'
alias ltoday='noglob ledger register --period today'
alias ldays='noglob ledger register --begin "last day"'
alias lweek='noglob ledger register --begin "last 7 days"'
alias balc='bal --current --aux-date'
alias lpending='ledger register --pending'
alias luncleared='ledger register --uncleared --begin "last 30 days"'
alias lcash='ledger balance Expenses:Cash'
alias budget='ledger budget --exchange R ^Expenses and not ^Expenses:Cash'
alias budget-month='ledger budget --period "this month" --exchange R ^Expenses and not ^Expenses:Cash'

_ledger_smartcase_expr() {
    echo "$1" | sed -r 's/[A-Z]/.*&/g'
}

bal() {
    if  [ $# -eq 0 ] || [[ $1 =~ [-].+  ]] ; then
        ledger balance --format '%(account)\n' ^Assets | sort | fzf --multi --preview "ledger balance $* {+}"
    elif [ $# -eq 1 ] ; then
        ledger balance \( ^Assets ^Liabilities \) and $(_ledger_smartcase_expr "$*")
    else
        ledger balance \( ^Assets ^Liabilities \) and $*
    fi
}

ele() {
    fn="$HOME/Dropbox/ledger/data/$(date +%Y).ledger"
    vim "$(eval "echo $fn")"
}

lx() {
    entry=$(ledger xact $*)
    fn="$HOME/Dropbox/ledger/data/$(date +%Y).ledger"

    echo "$entry"
    read -q reply?"Is it ok? (Y/n) "
    echo
    case "$reply" in
        [yY])
            echo "$entry\n" >> "$fn";;
    esac
}

budgets() {
    seq 0 24 | xargs -I{} date -d "this month - {} months" +%Y-%m | \
        fzf --reverse --preview-window 90% --preview 'ledger budget -p {} --exchange R ^Expenses and not ^Expenses:Cash'
}

# vim: et ft=zsh :
